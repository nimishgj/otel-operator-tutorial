apiVersion: v1
kind: Namespace
metadata:
  name: demo-app
---
apiVersion: opentelemetry.io/v1alpha1
kind: Instrumentation
metadata:
  name: nodejs-instrumentation
  namespace: demo-app
spec:
  exporter:
    endpoint: http://scout-collector.opentelemetry-operator-system.svc.cluster.local:4318
  propagators:
    - tracecontext
    - baggage
  sampler:
    type: parentbased_traceidratio
    argument: "1.0"
  nodejs:
    env:
      - name: OTEL_SERVICE_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-node-app
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-node-app
  template:
    metadata:
      labels:
        app: sample-node-app
      annotations:
        instrumentation.opentelemetry.io/inject-nodejs: "true"
        instrumentation.opentelemetry.io/log-level: debug
    spec:
      containers:
        - name: app
          image: public.ecr.aws/w7v4m5h1/sample-nodejs
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: sample-node-app
  namespace: demo-app
spec:
  selector:
    app: sample-node-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-node-app-ingress
  namespace: demo-app
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTP
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sample-node-app
                port:
                  number: 80



